name: CI/CD FastPay

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Para asegurar que se obtenga todo el historial de commits

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Instalar dependencias
        run: npm install

      - name: Dar permisos de ejecución requeridos
        run: |
          chmod +x ./node_modules/.bin/nyc
          chmod +x ./node_modules/.bin/mocha
          chmod +x ./node_modules/.bin/eslint
          chmod +x ./node_modules/.bin/prettier

      - name: Ejecutar pruebas y cobertura de código
        run: |
          npm run coverage > test-output.log
          echo "Pruebas y coberturas finalizadas."

      - name: Analizar código con ESLint
        run: npx eslint .

      - name: Analizar código con SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=prisVegaTest_fastpay-app
            -Dsonar.organization=prisvegatest
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io

        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Auditoría de seguridad (npm audit)
        run: npm audit --audit-level=moderate || true

      - name: Escanear imagen con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/fastpay-app

      - name: Instalar Trivy (alternativa si falla el action oficial)
        run: |
          sudo apt-get update && sudo apt-get install wget -y
          wget -q https://github.com/aquasecurity/trivy/releases/download/v0.49.1/trivy_0.49.1_Linux-64bit.tar.gz
          tar -xzf trivy_0.49.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Escanear proyecto con Trivy
        run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .

      - name: Verificar formato de código con Prettier
        run: npx prettier --check .

      - name: Escaneo de secretos con GitLeaks
        run: npx gitleaks detect --no-git --exclude-paths="node_modules,coverage,dist"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dockerfile Linter
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Verificar dependencias desactualizadas
        run: npm outdated || true

      - name: Subir logs y cobertura
        uses: actions/upload-artifact@v4
        with:
          name: reportes-pruebas
          path: |
            test-output.log
            coverage/

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Login en DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construir imagen Docker
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fastpay-app .

      - name: Subir imagen a DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/fastpay-app

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Deploy a Azure Web App usando perfil de publicación
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'fastpay-app'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ secrets.DOCKERHUB_USERNAME }}/fastpay-app
